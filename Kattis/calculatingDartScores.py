a = [1,2,3,
    2,4,6,
    3,6,9,
    4,8,12,
    5,10,15,
    6,12,18,
    7,14,21,
    8,16,24,
    9,18,27,
    10,20,30,
    11,22,33,
    12,24,36,
    13,26,39,
    14,28,42,
    15,30,45,
    16,32,48,
    17,34,51,
    18,36,54,
    19,38,57,
    20,40,60]
    

#def check(x):
#  if(x % 3 == 0): return "single %d" % a[x]
#  if(x % 3 == 1): return "double %d" % a[x -(x%3)]
#  if(x % 3 == 2): return "triple %d" % a[x -(x%3)]
  
#s1 = { a[i] : "%s\n" % (check(i)) for i in range(60)}
#s2 = {(a[i]+a[j]) :"%s\n%s\n" % (check(i), check(j)) for i in range(60) for j in range(60)}
#s3 = {(a[i]+a[j]+a[k]) :"%s\n%s\n%s" % (check(i), check(j), check(k)) for i in range(60) for j in range(60) for k in range(60)}

s = {1: 'single 1\n', 2: 'single 1\nsingle 1\n', 3: 'single 1\nsingle 1\nsingle 1', 4: 'single 2\nsingle 1\nsingle 1', 6: 'single 4\nsingle 1\nsingle 1', 9: 'single 7\nsingle 1\nsingle 1', 8: 'single 6\nsingle 1\nsingle 1', 12: 'single 10\nsingle 1\nsingle 1', 5: 'single 3\nsingle 1\nsingle 1', 10: 'single 8\nsingle 1\nsingle 1', 15: 'single 13\nsingle 1\nsingle 1', 18: 'single 16\nsingle 1\nsingle 1', 7: 'single 5\nsingle 1\nsingle 1', 14: 'single 12\nsingle 1\nsingle 1', 21: 'single 19\nsingle 1\nsingle 1', 16: 'single 14\nsingle 1\nsingle 1', 24: 'single 20\nsingle 3\nsingle 1', 27: 'single 20\nsingle 6\nsingle 1', 20: 'single 18\nsingle 1\nsingle 1', 30: 'single 20\nsingle 9\nsingle 1', 11: 'single 9\nsingle 1\nsingle 1', 22: 'single 20\nsingle 1\nsingle 1', 33: 'single 20\nsingle 12\nsingle 1', 36: 'single 20\nsingle 15\nsingle 1', 13: 'single 11\nsingle 1\nsingle 1', 26: 'single 20\nsingle 5\nsingle 1', 39: 'single 20\nsingle 18\nsingle 1', 28: 'single 20\nsingle 7\nsingle 1', 42: 'double 20\nsingle 1\nsingle 1', 45: 'double 20\nsingle 4\nsingle 1', 32: 'single 20\nsingle 11\nsingle 1', 48: 'double 20\nsingle 7\nsingle 1', 17: 'single 15\nsingle 1\nsingle 1', 34: 'single 20\nsingle 13\nsingle 1', 51: 'double 20\nsingle 10\nsingle 1', 54: 'double 20\nsingle 13\nsingle 1', 19: 'single 17\nsingle 1\nsingle 1', 38: 'single 20\nsingle 17\nsingle 1', 57: 'double 20\nsingle 16\nsingle 1', 40: 'single 20\nsingle 19\nsingle 1', 60: 'double 20\nsingle 19\nsingle 1', 25: 'single 20\nsingle 4\nsingle 1', 31: 'single 20\nsingle 10\nsingle 1', 23: 'single 20\nsingle 2\nsingle 1', 37: 'single 20\nsingle 16\nsingle 1', 29: 'single 20\nsingle 8\nsingle 1', 43: 'double 20\nsingle 2\nsingle 1', 46: 'double 20\nsingle 5\nsingle 1', 49: 'double 20\nsingle 8\nsingle 1', 35: 'single 20\nsingle 14\nsingle 1', 52: 'double 20\nsingle 11\nsingle 1', 55: 'double 20\nsingle 14\nsingle 1', 58: 'double 20\nsingle 17\nsingle 1', 41: 'single 20\nsingle 20\nsingle 1', 61: 'double 20\nsingle 20\nsingle 1', 44: 'double 20\nsingle 3\nsingle 1', 47: 'double 20\nsingle 6\nsingle 1', 50: 'double 20\nsingle 9\nsingle 1', 53: 'double 20\nsingle 12\nsingle 1', 56: 'double 20\nsingle 15\nsingle 1', 59: 'double 20\nsingle 18\nsingle 1', 62: 'triple 20\nsingle 1\nsingle 1', 63: 'triple 20\nsingle 2\nsingle 1', 64: 'triple 20\nsingle 3\nsingle 1', 66: 'triple 20\nsingle 5\nsingle 1', 69: 'triple 20\nsingle 8\nsingle 1', 65: 'triple 20\nsingle 4\nsingle 1', 68: 'triple 20\nsingle 7\nsingle 1', 72: 'triple 20\nsingle 11\nsingle 1', 67: 'triple 20\nsingle 6\nsingle 1', 70: 'triple 20\nsingle 9\nsingle 1', 75: 'triple 20\nsingle 14\nsingle 1', 78: 'triple 20\nsingle 17\nsingle 1', 71: 'triple 20\nsingle 10\nsingle 1', 74: 'triple 20\nsingle 13\nsingle 1', 81: 'triple 20\nsingle 20\nsingle 1', 73: 'triple 20\nsingle 12\nsingle 1', 76: 'triple 20\nsingle 15\nsingle 1', 84: 'triple 20\nsingle 20\nsingle 4', 87: 'triple 20\nsingle 20\nsingle 7', 77: 'triple 20\nsingle 16\nsingle 1', 80: 'triple 20\nsingle 19\nsingle 1', 90: 'triple 20\nsingle 20\nsingle 10', 79: 'triple 20\nsingle 18\nsingle 1', 82: 'triple 20\nsingle 20\nsingle 2', 93: 'triple 20\nsingle 20\nsingle 13', 96: 'triple 20\nsingle 20\nsingle 16', 83: 'triple 20\nsingle 20\nsingle 3', 86: 'triple 20\nsingle 20\nsingle 6', 99: 'triple 20\nsingle 20\nsingle 19', 85: 'triple 20\nsingle 20\nsingle 5', 88: 'triple 20\nsingle 20\nsingle 8', 102: 'triple 20\ndouble 20\nsingle 2', 105: 'triple 20\ndouble 20\nsingle 5', 89: 'triple 20\nsingle 20\nsingle 9', 92: 'triple 20\nsingle 20\nsingle 12', 108: 'triple 20\ndouble 20\nsingle 8', 91: 'triple 20\nsingle 20\nsingle 11', 94: 'triple 20\nsingle 20\nsingle 14', 111: 'triple 20\ndouble 20\nsingle 11', 114: 'triple 20\ndouble 20\nsingle 14', 95: 'triple 20\nsingle 20\nsingle 15', 98: 'triple 20\nsingle 20\nsingle 18', 97: 'triple 20\nsingle 20\nsingle 17', 117: 'triple 20\ndouble 20\nsingle 17', 100: 'triple 20\nsingle 20\nsingle 20', 120: 'triple 20\ndouble 20\nsingle 20', 103: 'triple 20\ndouble 20\nsingle 3', 106: 'triple 20\ndouble 20\nsingle 6', 109: 'triple 20\ndouble 20\nsingle 9', 112: 'triple 20\ndouble 20\nsingle 12', 115: 'triple 20\ndouble 20\nsingle 15', 118: 'triple 20\ndouble 20\nsingle 18', 101: 'triple 20\ndouble 20\nsingle 1', 121: 'triple 20\ntriple 20\nsingle 1', 104: 'triple 20\ndouble 20\nsingle 4', 107: 'triple 20\ndouble 20\nsingle 7', 110: 'triple 20\ndouble 20\nsingle 10', 113: 'triple 20\ndouble 20\nsingle 13', 116: 'triple 20\ndouble 20\nsingle 16', 119: 'triple 20\ndouble 20\nsingle 19', 122: 'triple 20\ntriple 20\nsingle 2', 123: 'triple 20\ntriple 20\nsingle 3', 124: 'triple 20\ntriple 20\nsingle 4', 126: 'triple 20\ntriple 20\nsingle 6', 129: 'triple 20\ntriple 20\nsingle 9', 125: 'triple 20\ntriple 20\nsingle 5', 128: 'triple 20\ntriple 20\nsingle 8', 132: 'triple 20\ntriple 20\nsingle 12', 127: 'triple 20\ntriple 20\nsingle 7', 130: 'triple 20\ntriple 20\nsingle 10', 135: 'triple 20\ntriple 20\nsingle 15', 138: 'triple 20\ntriple 20\nsingle 18', 131: 'triple 20\ntriple 20\nsingle 11', 134: 'triple 20\ntriple 20\nsingle 14', 141: 'triple 20\ntriple 20\ntriple 7', 133: 'triple 20\ntriple 20\nsingle 13', 136: 'triple 20\ntriple 20\nsingle 16', 144: 'triple 20\ntriple 20\ndouble 12', 147: 'triple 20\ntriple 20\ntriple 9', 137: 'triple 20\ntriple 20\nsingle 17', 140: 'triple 20\ntriple 20\nsingle 20', 150: 'triple 20\ntriple 20\ndouble 15', 139: 'triple 20\ntriple 20\nsingle 19', 142: 'triple 20\ntriple 20\ndouble 11', 153: 'triple 20\ntriple 20\ntriple 11', 156: 'triple 20\ntriple 20\ndouble 18', 143: 'triple 20\ntriple 19\ndouble 13', 146: 'triple 20\ntriple 20\ndouble 13', 159: 'triple 20\ntriple 20\ntriple 13', 145: 'triple 20\ndouble 20\ntriple 15', 148: 'triple 20\ntriple 20\ndouble 14', 162: 'triple 20\ntriple 20\ntriple 14', 165: 'triple 20\ntriple 20\ntriple 15', 149: 'triple 20\ntriple 19\ndouble 16', 152: 'triple 20\ntriple 20\ndouble 16', 168: 'triple 20\ntriple 20\ntriple 16', 151: 'triple 20\ndouble 20\ntriple 17', 154: 'triple 20\ntriple 20\ndouble 17', 171: 'triple 20\ntriple 20\ntriple 17', 174: 'triple 20\ntriple 20\ntriple 18', 155: 'triple 20\ntriple 19\ndouble 19', 158: 'triple 20\ntriple 20\ndouble 19', 157: 'triple 20\ndouble 20\ntriple 19', 177: 'triple 20\ntriple 20\ntriple 19', 160: 'triple 20\ntriple 20\ndouble 20', 180: 'triple 20\ntriple 20\ntriple 20'}

print(s.get(int(input()), "impossible"))